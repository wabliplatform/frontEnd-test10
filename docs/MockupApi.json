
[{
    "methodType":"POST",
    "methodName":"createmockup",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Mockup"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiMockupApi = new TempApi.MockupApi();",
    "importModelParameter":["let mockup = new TempApi.Mockup();"],
    "modelNames":["mockup"],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiMockupApi.createmockup( mockup, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"DELETE",
    "methodName":"deletemockup",
    "returnType":{

      "primitive":"true",
      "type":"null"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiMockupApi = new TempApi.MockupApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiMockupApi.deletemockup( mockupId, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully.');/**nextFunction*/}});"
  },{
    "methodType":"GETALL",
    "methodName":"getAllmockup",
    "returnType":{
      "primitive":false,
      "jsType":"Array",
      "modelName":"[Mockup]"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiMockupApi = new TempApi.MockupApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiMockupApi.getAllmockup((error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"GET",
    "methodName":"getmockup",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Mockup"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiMockupApi = new TempApi.MockupApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiMockupApi.getmockup( mockupId, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"PUT",
    "methodName":"updatemockup",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Mockup"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiMockupApi = new TempApi.MockupApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiMockupApi.updatemockup( mockupId, opts, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  }
]
